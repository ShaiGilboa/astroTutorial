---
import type { MarkdownInstance } from "astro";
import BlogLink from "../../components/BlogLink.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts: MarkdownInstance<Record<string, any>>[] =
    await Astro.glob("../posts/*.md");
  const allTags = allPosts.reduce((tags, post) => {
    return [...new Set([...tags, ...post.frontmatter.tags])];
  }, [] as string[]);

  return allTags.map(tag => ({ params: { tag }, props: { allPosts } }));
}

const { tag } = Astro.params;
const { allPosts } = Astro.props;
const filteredPosts = allPosts.filter(post =>
  post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      filteredPosts?.map(post => {
        return (
          <li>
            <BlogLink title={post.frontmatter.title} url={post.url} />
          </li>
        );
      })
    }
  </ul>
</BaseLayout>
