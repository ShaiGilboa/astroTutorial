---
import type { MarkdownInstance } from "astro";
import BlogLink from "../../components/BlogLink.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";

export async function getStaticPaths() {
  const allPosts: MarkdownInstance<Record<string, any>>[] =
    await Astro.glob("../posts/*.md");
  const allTags: string[] = [
    ...new Set(allPosts.map(post => post.frontmatter.tags).flat()),
  ];

  return allTags.map(tag => {
    const filteredPosts = allPosts.filter(post =>
      post.frontmatter.tags.includes(tag)
    );

    return { params: { tag }, props: { posts: filteredPosts } };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts?.map(post => {
        return (
          <li>
            <BlogLink title={post.frontmatter.title} url={post.url} />
          </li>
        );
      })
    }
  </ul>
</BaseLayout>
